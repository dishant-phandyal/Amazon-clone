{"command.restartServer":"重新啟動伺服器","extension.description":"使用 autopep8 格式器針對 Python 檔案的格式化支援。","settings.args.description":"傳遞至 autopep8 以格式化 Python 檔案的引數。每個引數都應該在陣列中以個別字串形式提供。\n範例:\n`\"autopep8.args\" = [\"--config\", \"<file>\"]`","settings.cwd.description":"設定用來格式化使用 autopep8 的 Python 檔案的目前工作目錄。依預設，它會使用工作區 `${workspaceFolder}` 的根目錄。您可以將它設定為 `${fileDirname}` 以使用要格式化為 autopep8 工作目錄之檔案的父資料夾。","settings.importStrategy.description":"定義要用來格式化 Python 檔案的 autopep8 格式器二進位。設為 `useBundled` 時，延伸模組會使用延伸模組隨附的 autopep8 格式器二進位。設為 `fromEnvironment` 時，延伸模組會嘗試使用目前選取的環境中提供的 autopep8 格式器二進位與所有相依性。**注意**: 如果延伸模組在選取的環境中找不到有效的 autopep8 格式器二進位，則會使用延伸模組隨附的二進位遞補。`autopep8.path` 設定會優先，並且會覆寫 `autopep8.importStrategy` 的行為。","settings.importStrategy.fromEnvironment.description":"使用來自選取的 Python 環境的 autopep8 二進位。如果延伸模組找不到有效的 autopep8 二進位，則會使用 autopep8 的套件組合版本遞補。","settings.importStrategy.useBundled.description":"一律使用 autopep8 的套件組合版本來格式化 Python 檔案。","settings.interpreter.description":"將用來啟動 autopep8 伺服器及任何子程序的 Python 可執行檔或命令的路徑。接受單一或多個字串的陣列。設為 `[]` 時，延伸模組會使用選取的 Python 解譯器的路徑。如果傳遞命令，每個引數都應該在陣列中以個別字串形式提供。","settings.path.description":"延伸模組用來透過 autopep8 格式化 Python 檔案的路徑或命令。接受單一或多個字串的陣列。如果傳遞命令，每個引數都應該在陣列中以個別字串形式提供。如果設為 `[\"autopep8\"]`，將會使用 `PATH` 環境變數中提供的 autopep8 版本。注意: 使用此選項可能會使格式化變慢。\n 範例:\n - `[\"~/global_env/autopep8\"]`\n - `[\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"autopep8\"]`","settings.showNotifications.always.description":"格式化 Python 檔案時，會為伺服器選擇要顯示的的任何內容顯示通知。","settings.showNotifications.description":"控制此擴充功能何時顯示通知。","settings.showNotifications.off.description":"已關閉所有通知，記錄中仍可使用任何格式化 Python 檔案時的錯誤或警告。","settings.showNotifications.onError.description":"只有在格式化 Python 檔案而發生錯誤時才會顯示通知。","settings.showNotifications.onWarning.description":"格式化 Python 檔案時，會顯示任何錯誤和警告的通知。"}
